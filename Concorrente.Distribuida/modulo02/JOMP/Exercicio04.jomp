package JOMP;

import jomp.runtime.OMP;

public class Exercicio04 {
	//Como fazer a soma de uma matriz usando
	// omp parallel shared(x,y,n)
	// sem for omp
	
	//10 x 10
	
	public static void main(String[] args) {
		int myid = 0; 
		int b = 0;
		int i = 0;
		int[][] matriz  = {	{1, 2, 3, 4, 5, 6, 7, 8, 9, 0},
					{1, 2, 3, 4, 5, 6, 7, 8, 9, 0}, 
					{1, 2, 3, 4, 5, 6, 7, 8, 9, 0},
					{1, 2, 3, 4, 5, 6, 7, 8, 9, 0},
					{1, 2, 3, 4, 5, 6, 7, 8, 9, 0},
					{1, 2, 3, 4, 5, 6, 7, 8, 9, 0},
					{1, 2, 3, 4, 5, 6, 7, 8, 9, 0},
					{1, 2, 3, 4, 5, 6, 7, 8, 9, 0},
					{1, 2, 3, 4, 5, 6, 7, 8, 9, 0},
					{1, 2, 3, 4, 5, 6, 7, 8, 9, 0},
				 };
		
		OMP.setNumThreads(10);
		
		//omp parallel shared(matriz) private(myid, i) reduction(+:b)
		{
			myid = OMP.getThreadNum();
			
			//omp for
			for (i = 0; i < matriz.length; i++) {
				b += matriz[myid][i];
				System.out.println("Thread: " + myid + ", Valor: " + matriz[myid][i]);
			}
			
		}
		
		System.out.println("Valor Total: "+ b);
	}
}
